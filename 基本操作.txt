git工作区域图:
工作区  ->  暂存区  ->  Git仓库

创建文件:touch 文件名(文件名:形如hello_world.cpp,README.md这种)
打开文件:cat 文件名
修改文件:vim 文件名  -》  保存(Esc+Z+Z)  {在修改文件时切记要把底下的状态变一下比如变成INSERT,按0即可更换状态}

查看当前工作状态命令:git status
提交文件到暂存区:git add 文件名
文件从暂存区提交到仓库:git commit -m "具体操作"

文件从暂存区提交到仓库的这些具体操作如下(这些具体操作相当于是自己给的一个注释)：
1.提交文件名文件,如git commit -m "提交README.md文件"
2.删除文件名文件,如git commit -m "删除README.md文件"
3.重命名文件名文件,如如git commit -m "重命名README.md文件"
4.其他自己都可以给注释

查看历史提交记录:git log
查看简约版历史提交记录:git log --pretty=oneline或git log --oneline或git reflog

HEAD控制的方式有三种：
(1) 使用版本号进行操作(常用)：
命令格式为：git reset --hard 版本号
(2) 使用^符号进行操作，只能后退：
命令： git reset --hard HEAD^ 表示后退一个版本
命令： git reset --hard HEAD^^ 表示后退两个版本
(3) 使用~符号进行操作，只能后退：
命令： git reset --hard HEAD~ 表示后退一个版本；
命令： git reset --hard HEAD~~ 表示后退两个版本；
命令： git reset --hard HEAD~5 表示后退5个版本；
命令： git reset --hard HEAD~n 表示后退n个版本；


对于版本之间同样文件内容比较可以使用命令 git diff 进行操作
比较文件的差异有多种情况：
第一种：工作区和暂存区文件比较，命令格式为： git diff 文件名
第二种：工作区和Git仓库文件比较，命令格式为：git diff HEAD 文件名
第三种：工作区和Git仓库 的 不同版本文件比较，命令格式为：git diff 版本号 文件名
注：不添加文件名进行比较时，将自动比较多个相同文件名文件。

git删除文件用到的命令有以下几种情况：
命令：rm 文件名 表示删除的是工作区文件。如果想再接着删除暂存区里的文件，输入git add 文件名即可。如果再想删除仓库里的文件用git commit -m "具体操作"即可
命令：git rm 表示删除的是工作区和暂存区的文件。如果再想删除仓库里的文件用git commit -m "具体操作"即可
命令：git rm -f 文件名 表示当工作目录和暂存区的同一个文件存在不同内容时，执行命令 git rm -f 文件名 就可以强制删除工作区和暂存区的文件。如果再想删除仓库里的文件用git commit -m "具体操作"即可
命令：git rm --cached 文件名 表示只删除暂存区的文件并且保留工作目录的文件。如果再想删除仓库里的文件用git commit -m "具体操作"即可

重命名文件有来两种情况：
命令：mv 旧文件名 新文件名 表示将工作区文件重命名，暂存区和仓库文件名不变。如果想再接着重命名暂存区里的文件，输入git add 文件名即可。如果再想重命名仓库里的文件用git commit -m "具体操作"即可
命令(常用)：git mv 旧文件名 新文件名 表示将工作区和暂存区的文件重命名，仓库文件名不变。如果再想重命名仓库里的文件用git commit -m "具体操作"即可